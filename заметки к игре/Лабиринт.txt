from pygame import *
win_width = 700
win_height = 500
window = display.set_mode((win_width, win_height))
display.set_caption("Maze")
background = transform.scale(
    image.load("space.jpg"),
    (win_width, win_height)
)
mixer.init()
mixer.music.load("space_music.ogg")
mixer.music.play()
kick = mixer.Sound("kill.ogg")
money = mixer.Sound("money.ogg")
game = True
FPS = 60
finish = False
clock = time.Clock()
font.init()
font = font.Font(None, 70)
win = font.render('Победа', True, (220, 20, 60))
lose = font.render("Проигрыш", True, (220, 20, 60))

class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, player_speed):
        super().__init__()
        self.image = transform.scale(image.load(player_image), (45, 80))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Player(GameSprite):
    def update(self):
        keys = key.get_pressed()
        if keys[K_LEFT] and self.rect.x >5:
            self.rect.x -= self.speed
        if keys[K_RIGHT] and self.rect.x < win_width - 80:
            self.rect.x += self. speed
        if keys[K_UP] and self.rect.y >5:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < win_height - 80:
            self.rect.y += self.speed
class Enemy(GameSprite):
    def update(self):
        if self.rect.x <= 470:
            self.direction = "right"
        if self.rect.x >= win_width - 85:
            self.direction = "left"

        if self.direction == "left":
            self.rect.x -= self.speed
        else:
            self.rect.x += self.speed

class Wall(sprite.Sprite):
    def __init__(self, color_1, color_2, color_3, wall_x, wall_y, wall_width, wall_height):
        super().__init__()
        self.color_1 = color_1
        self.color_2 = color_2
        self.color_3 = color_3
        self.width = wall_width
        self.height = wall_height
        self.image = Surface((self.width, self.height))
        self.image.fill((color_1, color_2, color_3))
        self.rect = self.image.get_rect()
        self.rect.x = wall_x
        self.rect.y = wall_y
    def draw_wall(self):
        window.blit(self.image, (self.rect.x, self.rect.y))



player = Player("among_us1.png", 5, win_height - 80, 5)
monster = Enemy("imposter.png", win_width -  80, 280, 2)
final = GameSprite("money.png", win_width - 120, win_height - 80, 0)


w1 = Wall(255, 255, 255, 100, 20, 450, 10)
w2 = Wall(255, 255, 255, 100, 480, 350, 10)
w3 = Wall(255, 255, 255, 100, 20, 10, 350)
w4 = Wall(255, 255, 255, 450, 130, 10, 360)
w5 = Wall(255, 255, 255, 220, 140, 10, 250)
w6 = Wall(255, 255, 255, 220, 380, 130, 10)
w7 = Wall(255, 255, 255, 320, 250, 130, 10)
w8 = Wall(255, 255, 255, 220, 130, 130, 10)
w9 = Wall(255, 255, 255, 350, 20, 10, 120)


while game:
    for e in event.get():
        if e.type == QUIT:
            game = False

    if finish != True:
        

        window.blit(background,(0,0))
        monster.update()
        player.update()
        player.reset()
        monster.reset()
        final.reset()


        w1.draw_wall()
        w2.draw_wall()
        w3.draw_wall()
        w4.draw_wall()
        w5.draw_wall()
        w6.draw_wall()
        w7.draw_wall()
        w8.draw_wall()
        w9.draw_wall()

        if sprite.collide_rect(player, final):
            window.blit(win, (200, 200))
            finish = True
            money.play()
            window.blit(win, (200, 200))
        if sprite.collide_rect(player, monster) or sprite.collide_rect(player, w1) or sprite.collide_rect(player, w2) or sprite.collide_rect(player, w3) or sprite.collide_rect(player, w4) or sprite.collide_rect(player, w5) or sprite.collide_rect(player, w6) or sprite.collide_rect(player, w7) or sprite.collide_rect(player, w8) or sprite.collide_rect(player, w9):
            finish = True
            window.blit(lose, (200, 200))
            kick.play()


    display.update()
    clock.tick(FPS)
